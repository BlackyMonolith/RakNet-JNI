// The MIT License (MIT)
//
// Copyright (c) 2015 GoMint, BlackyPaw and geNAZt
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class io_gomint_raknet_RakPeerInterface */

#ifndef _Included_io_gomint_raknet_RakPeerInterface
#define _Included_io_gomint_raknet_RakPeerInterface
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     io_gomint_raknet_RakPeerInterface
 * Method:    jniGetInstance
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_io_gomint_raknet_RakPeerInterface_jniGetInstance
  (JNIEnv *, jclass);

/*
 * Class:     io_gomint_raknet_RakPeerInterface
 * Method:    jniDestroyInstance
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_io_gomint_raknet_RakPeerInterface_jniDestroyInstance
  (JNIEnv *, jclass, jlong);

/*
 * Class:     io_gomint_raknet_RakPeerInterface
 * Method:    jniStartup
 * Signature: (JJ[I[Ljava/lang/String;[SI)I
 */
JNIEXPORT jint JNICALL Java_io_gomint_raknet_RakPeerInterface_jniStartup
  (JNIEnv *, jclass, jlong, jlong, jintArray, jobjectArray, jshortArray, jint);

/*
 * Class:     io_gomint_raknet_RakPeerInterface
 * Method:    jniSetMaximumIncomingConnections
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_io_gomint_raknet_RakPeerInterface_jniSetMaximumIncomingConnections
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     io_gomint_raknet_RakPeerInterface
 * Method:    jniConnect
 * Signature: (JLjava/lang/String;ILjava/lang/String;JJJJ)I
 */
JNIEXPORT jint JNICALL Java_io_gomint_raknet_RakPeerInterface_jniConnect
  (JNIEnv *, jclass, jlong, jstring, jint, jstring, jlong, jlong, jlong, jlong);

/*
 * Class:     io_gomint_raknet_RakPeerInterface
 * Method:    jniSend
 * Signature: (J[BIIIBJZJ)J
 */
JNIEXPORT jlong JNICALL Java_io_gomint_raknet_RakPeerInterface_jniSend
  (JNIEnv *, jclass, jlong, jbyteArray, jint, jint, jint, jbyte, jlong, jboolean, jlong);

/*
 * Class:     io_gomint_raknet_RakPeerInterface
 * Method:    jniShutdown
 * Signature: (JJBI)V
 */
JNIEXPORT void JNICALL Java_io_gomint_raknet_RakPeerInterface_jniShutdown
  (JNIEnv *, jclass, jlong, jlong, jbyte, jint);

#ifdef __cplusplus
}
#endif
#endif
